/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HelloWorld,
  HelloWorldInterface,
} from "../../contracts/HelloWorld";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "clientAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "NewMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMessage",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "terminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106b98061007e6000396000f3fe6080604052600436106100745760003560e01c8063715018a61161004e578063715018a6146101455780638da5cb5b1461015a578063ce6d41de14610187578063f2fde38b146101a9576100e7565b80630c08bf88146100f9578063368b8772146101105780633ccfd60b14610130576100e7565b366100e757600080546001600160a01b03165b6001600160a01b03163460405160006040518083038185875af1925050503d80600081146100d1576040519150601f19603f3d011682016040523d82523d6000602084013e6100d6565b606091505b50509050806100e457600080fd5b50005b600080546001600160a01b0316610087565b34801561010557600080fd5b5061010e6101c9565b005b34801561011c57600080fd5b5061010e61012b366004610568565b6101df565b34801561013c57600080fd5b5061010e61022b565b34801561015157600080fd5b5061010e610296565b34801561016657600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561019357600080fd5b5061019c6102aa565b60405161017e91906105da565b3480156101b557600080fd5b5061010e6101c4366004610538565b61034b565b6101d16103dd565b6000546001600160a01b0316ff5b3360009081526001602052604090206101f990838361049f565b50604051439033907f0951e0ca7381a5c665ef8d64c982968ea7b66aaf3d6c667a004bc9926d2959b090600090a35050565b6102336103dd565b600080546040516001600160a01b039091169047908381818185875af1925050503d8060008114610280576040519150601f19603f3d011682016040523d82523d6000602084013e610285565b606091505b505090508061029357600080fd5b50565b61029e6103dd565b6102a86000610437565b565b3360009081526001602052604090208054606091906102c89061062f565b80601f01602080910402602001604051908101604052809291908181526020018280546102f49061062f565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050905090565b6103536103dd565b6001600160a01b0381166103d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61029381610437565b6000546001600160a01b031633146102a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cb565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104ab9061062f565b90600052602060002090601f0160209004810192826104cd5760008555610513565b82601f106104e65782800160ff19823516178555610513565b82800160010185558215610513579182015b828111156105135782358255916020019190600101906104f8565b5061051f929150610523565b5090565b5b8082111561051f5760008155600101610524565b60006020828403121561054a57600080fd5b81356001600160a01b038116811461056157600080fd5b9392505050565b6000806020838503121561057b57600080fd5b823567ffffffffffffffff8082111561059357600080fd5b818501915085601f8301126105a757600080fd5b8135818111156105b657600080fd5b8660208285010111156105c857600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b81811015610607578581018301518582016040015282016105eb565b81811115610619576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061064357607f821691505b6020821081141561067d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122059a364a440cb600aa181fc55d3856d384fbcfe2a11a889f37f2311b6b5a03daf64736f6c63430008070033";

type HelloWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWorld__factory extends ContractFactory {
  constructor(...args: HelloWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HelloWorld> {
    return super.deploy(overrides || {}) as Promise<HelloWorld>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelloWorld {
    return super.attach(address) as HelloWorld;
  }
  override connect(signer: Signer): HelloWorld__factory {
    return super.connect(signer) as HelloWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWorldInterface {
    return new utils.Interface(_abi) as HelloWorldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWorld {
    return new Contract(address, _abi, signerOrProvider) as HelloWorld;
  }
}
